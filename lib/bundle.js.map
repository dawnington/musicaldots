{"version":3,"sources":["webpack:///webpack/bootstrap 1c8043056bb23b9e302b","webpack:///./lib/musicGame.js","webpack:///./util/note.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;;;;;;ACDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1c8043056bb23b9e302b\n **/","const Note = require('../util/note');\nwindow.Note = Note;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/musicGame.js\n ** module id = 0\n ** module chunks = 0\n **/","// util/note.js\nconst ctx = new (window.AudioContext || window.webkitAudioContext)();\n\nconst createOscillator = function (freq) {\n  const osc = ctx.createOscillator();\n  osc.type = \"sine\";\n  osc.frequency.value = freq;\n  osc.detune.value = 0;\n  osc.start(ctx.currentTime);\n  return osc;\n};\n\nconst createGainNode = function () {\n  const gainNode = ctx.createGain();\n  gainNode.gain.value = 0;\n  gainNode.connect(ctx.destination);\n  return gainNode;\n};\n\nconst Note = function (freq) {\n  this.oscillatorNode = createOscillator(freq);\n  this.gainNode = createGainNode();\n  this.oscillatorNode.connect(this.gainNode);\n};\n\nNote.prototype.start = function () {\n  this.gainNode.gain.value = 0.3;\n};\n\nNote.prototype.stop = function () {\n  this.gainNode.gain.value = 0;\n};\n\nmodule.exports = Note;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util/note.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}